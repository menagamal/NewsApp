//
//  ArticlesPresenter.swift
//  NewsApp
//
//  Created Mena Gamal on 12/15/20.
//  Copyright © 2020 Mena Gamal. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ArticlesPresenter: BasePresenter,ArticlesPresenterProtocol {

    weak internal var view: ArticlesViewProtocol?
    
    var interactor: ArticlesInteractorInputProtocol?
    
    private let router: ArticlesRouterProtocol
    
    private var dataSource: ArticlesTableViewDataSource?
    

    init(view: ArticlesViewProtocol, interactor: ArticlesInteractorInputProtocol?, router: ArticlesRouterProtocol) {
        self.view = view
        self.interactor = interactor
        self.router = router
    }
    func loadDetails() {
        self.baseView?.showLoadingIndicator()
        self.interactor?.loadArticles()
    }

}

extension ArticlesPresenter: ArticlesInteractorOutputProtocol {
    func didFetchArticles(articles: [Articles]) {
        self.baseView?.hideLoadingIndicator()
        guard  let view = self.view else {
            return
        }
        self.dataSource = ArticlesTableViewDataSource(delegate: self, tableView: view.articlesTableView, articles: articles)
    }
    
    func didFailFetchArticles() {
        self.baseView?.hideLoadingIndicator()
    }
    
    
}

extension ArticlesPresenter: MyStoresCellDataSourceDelegate{
    func didSelected(url: String) {
        guard  let view = self.view ,let sourceUrl = URL(string: url) else {
            return
        }
        view.openSafari(url: sourceUrl)
    }
}
